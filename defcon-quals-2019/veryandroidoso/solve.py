#!/usr/bin/env python2

import sys
import os

flag = [0] * 9
ss = 0 # int scramble

def m0(i, j):
    return ((i + 37) ^ (j - 123 + 256))%256
def m1(i, j):
    return ((i + 39) ^ (j - 125 + 256))%256
def m2(i, j):
    return ((i + 12) ^ (j - 3 + 256))%256
def m3(i, j):
    return ((i + 44) ^ (j - 21 + 256))%256
def m4(i, j):
    return ((i + 123) ^ (j - 77 + 256))%256
def m5():
    pass
def m6(i, j):
    return ((i + 37) ^ (j - 99 + 256))%256

# {{{ s1 ~ s5
s1 = [0x11,0x8f,0x24,0x80,0x5a,0x77,0x25,0x72,0xeb,0x3b,0xfb,0xdb,0x20,0x27,0x1d,0x45,0x86,0x57,0x59,0x4f,0xc8,0xfe,0x5d,0xd3,0x35,0xf4,0x55,0x1e,0xf5,0x17,0x40,0x83,0xfc,0xe8,0x95,0x50,0xf6,0x78,0xcf,0x23,0x2,0x6f,0x7,0xf,0xe6,0xd6,0xc6,0xd0,0xee,0xd5,0xb6,0x85,0xfa,0xdc,0x42,0x5c,0xc9,0x6b,0x60,0xe0,0xba,0x47,0x41,0xc1,0xad,0xef,0x58,0xd4,0xa0,0x33,0xc2,0xf7,0xa7,0xd7,0x4,0xb3,0xac,0x30,0x44,0x16,0x9d,0x76,0x46,0xa4,0xc,0x7f,0xa5,0x3e,0xc4,0xea,0xdd,0xb5,0xde,0xd2,0xf9,0xa6,0x34,0x9f,0x5,0x2c,0x73,0x71,0x29,0x28,0x3,0x10,0xf3,0xff,0xb1,0xaf,0x2b,0x92,0x31,0xbe,0x51,0x7d,0x19,0xe9,0xb4,0x64,0xe,0x9b,0xa8,0x90,0x22,0xc0,0x62,0xcc,0x1b,0xa1,0x21,0xa3,0x5b,0x8a,0xf0,0x4a,0xce,0xe2,0x1a,0x9a,0xf1,0x6c,0x96,0x8d,0x1,0x3d,0x6e,0x87,0xa9,0x7e,0xdf,0xa2,0x6,0xbd,0x9c,0xb0,0xb,0x69,0x98,0x65,0x43,0x38,0x63,0x6a,0x54,0xed,0x61,0x56,0x49,0x15,0x2f,0x79,0x91,0x7c,0x18,0xbb,0xab,0x8c,0x94,0x26,0x75,0x4b,0x4d,0x6d,0x2d,0xd1,0x89,0x12,0x5e,0xb9,0xd8,0x88,0x8e,0xe4,0xaa,0xec,0xe5,0xf2,0x48,0xbc,0xe1,0xca,0x3f,0x81,0x67,0xcb,0xb7,0x9e,0xda,0x66,0xc7,0x0,0x8b,0x4e,0x52,0x4c,0x13,0xe7,0xae,0x3c,0x32,0x99,0x7a,0xa,0xd,0x14,0xc3,0xf8,0x68,0xfd,0xcd,0x36,0xc5,0xe3,0xb8,0x2a,0x82,0x74,0x37,0xbf,0x7b,0x5f,0x3a,0x53,0xd9,0xb2,0x97,0x1c,0x9,0x93,0x2e,0x1f,0x8,0x70,0x39,0x84]
s2 = [0x18,0x0,0x9a,0x2a,0x68,0x6f,0x11,0xcf,0xec,0x70,0x7f,0x9b,0x53,0xa0,0x82,0x9,0xc,0x15,0x25,0x85,0xba,0xf,0xfe,0xea,0xd4,0xe5,0xfc,0xce,0xf8,0xbf,0x38,0xae,0xe7,0xb6,0xab,0x9c,0x8b,0x98,0xf7,0xf3,0xd,0x42,0x84,0xd5,0xc4,0x9e,0xa6,0xb1,0xc2,0x3c,0xa5,0x13,0x1a,0xdd,0xcb,0x64,0x48,0x56,0x7b,0x87,0xfa,0xb4,0xe,0x55,0x92,0x1,0xd2,0x72,0x7c,0xc0,0x12,0x6a,0x1b,0x95,0xb5,0x66,0x5f,0x45,0x94,0xad,0xc7,0x28,0x8,0xf4,0x6b,0x71,0xe4,0xd7,0x31,0x19,0x6,0xc1,0xe1,0xcd,0xee,0xa9,0xf1,0x7a,0x1f,0x16,0x4d,0x83,0x39,0x58,0x90,0x91,0xbd,0x99,0xde,0x33,0x81,0xf6,0x1c,0xe8,0x2,0x8d,0x89,0x65,0xa,0x61,0x7d,0xe0,0xd0,0xdb,0xe9,0x44,0xbb,0x3d,0x46,0xc3,0x14,0x67,0x8e,0x34,0x96,0x37,0x4,0xd8,0x52,0xaa,0xbc,0x4e,0xa4,0x3f,0xb,0x63,0xc5,0xdc,0x7,0x60,0xeb,0x26,0xa8,0x6e,0x5d,0x27,0x22,0x5c,0x36,0xa2,0x5a,0xf2,0xd3,0x6d,0x9d,0x2d,0x1e,0x57,0x9f,0x75,0x88,0x1d,0x93,0x49,0xc6,0x74,0x5b,0x17,0xf5,0xda,0x79,0xf0,0xa1,0xb9,0x35,0x29,0x24,0x7e,0x21,0x3,0xa3,0xb8,0xdf,0xa7,0x10,0x3b,0xfb,0x32,0xca,0xb2,0x4a,0xff,0xb0,0xf9,0xb7,0xac,0x3e,0xed,0x50,0xd6,0xe6,0xe3,0x4f,0xfd,0x51,0x41,0x2e,0xef,0xe2,0x43,0xcc,0x86,0x20,0x2c,0xd9,0x62,0x40,0x2b,0xc8,0x5e,0x77,0x73,0x8a,0x8c,0x2f,0xd1,0x4b,0x80,0xaf,0x3a,0x97,0xb3,0x69,0x54,0x59,0x78,0x5,0xc9,0x23,0x76,0x4c,0x30,0x8f,0x47,0x6c,0xbe]
s3 = [
63, 229, 55, 24, 146, 177, 41, 242, 39, 240, 133, 250, 69, 203, 253, 33, 127, 191, 79, 196, 50, 172, 230, 122, 226, 141, 211, 93, 109, 167, 20, 232, 245, 142, 176, 47, 169, 126, 255, 120, 201, 84, 18, 163, 140, 31, 2, 136, 216, 81, 209, 16, 14, 149, 97, 181, 22, 159, 114, 115, 28, 74, 112, 178, 219, 164, 94, 80, 77, 73, 231, 183, 244, 29, 99, 205, 8, 220, 15, 117, 0, 9, 102, 105, 217, 44, 154, 17, 119, 104, 107, 61, 152, 95, 56, 252, 106, 162, 87, 251, 12, 52, 234, 207, 197, 51, 239, 49, 113, 254, 222, 247, 215, 82, 138, 161, 37, 185, 131, 128, 228, 144, 249, 19, 4, 139, 11, 42, 190, 5, 124, 59, 223, 213, 26, 48, 121, 173, 166, 58, 64, 21, 200, 237, 23, 89, 145, 165, 175, 1, 157, 135, 36, 186, 180, 241, 30, 66, 53, 238, 118, 199, 150, 206, 86, 90, 225, 91, 46, 179, 25, 155, 214, 35, 193, 100, 65, 189, 40, 221, 137, 116, 62, 6, 54, 45, 129, 71, 32, 130, 148, 96, 170, 153, 182, 57, 111, 125, 187, 168, 246, 143, 210, 43, 212, 110, 160, 188, 83, 72, 67, 92, 218, 195, 134, 208, 147, 98, 13, 171, 243, 236, 75, 194, 204, 108, 158, 198, 10, 7, 156, 227, 3, 184, 174, 132, 78, 27, 76, 60, 123, 192, 38, 248, 233, 68, 101, 85, 151, 34, 224, 103, 202, 88, 70, 235
        ]
s4 = [0] * 256
s5 =[
14, 141, 205, 28, 40, 251, 154, 240, 30, 164, 171, 193, 49, 232, 169, 119, 194, 249, 252, 216, 31, 118, 244, 27, 44, 127, 124, 79, 60, 250, 217, 179, 93, 224, 110, 156, 170, 9, 138, 77, 204, 135, 254, 61, 66, 86, 50, 121, 197, 23, 202, 182, 39, 120, 175, 178, 233, 0, 130, 85, 131, 144, 8, 41, 16, 173, 17, 57, 222, 35, 185, 219, 206, 92, 174, 241, 125, 199, 78, 42, 212, 177, 198, 243, 147, 73, 102, 207, 45, 186, 15, 221, 134, 43, 168, 238, 47, 91, 21, 117, 53, 13, 18, 180, 191, 32, 56, 236, 181, 203, 142, 228, 38, 157, 6, 214, 195, 192, 126, 90, 215, 114, 155, 54, 3, 46, 183, 68, 70, 158, 159, 253, 26, 88, 101, 103, 188, 145, 136, 106, 208, 165, 107, 100, 25, 209, 96, 139, 55, 113, 5, 109, 150, 225, 229, 94, 163, 248, 111, 167, 226, 140, 89, 132, 67, 4, 128, 12, 58, 172, 83, 37, 123, 2, 22, 162, 143, 237, 7, 230, 184, 242, 62, 227, 190, 48, 187, 146, 64, 82, 71, 149, 59, 1, 84, 246, 122, 218, 99, 20, 76, 201, 74, 153, 129, 87, 148, 200, 213, 105, 29, 19, 108, 80, 220, 72, 166, 160, 116, 239, 34, 10, 211, 115, 161, 65, 24, 69, 75, 95, 112, 210, 152, 63, 97, 51, 133, 137, 235, 231, 245, 234, 104, 247, 151, 189, 223, 176, 36, 52, 81, 33, 98, 11, 255, 196
        ]
# }}}

assert sorted(s1) == range(256)
assert sorted(s2) == range(256)
assert sorted(s3) == range(256)
assert sorted(s5) == range(256)

def m7(a, b):
    v4 = a + 89
    v5 = b - 16 + 256
    return s1[v5%256] ^ s2[v4%256]

def m8(a, b):
    v4 = a + 34
    v5 = b - 24 + 256
    return s3[v5%256] ^ s4[v4%256]

def m9(piv):
    global s4
    for i in range(256):
        s4[i] = s5[i] ^ piv

def scramble(i):
    #  int sleep = ((int) sleep(500)) - 499;
    #  return ((i + ((int) Math.round(Math.sqrt((double) ((sleep * 4) * sleep)) / ((double) sleep)))) + 321) % 256;
    return ((i + 2) + 321) % 256;

def getSecretNumber(i):
    ary = [105, 71, 127, 221, 12, 24, 237, 85, 2, 143, 81, 214, 5, 79, 100, 82, 44, 225, 80, 5, 2, 177, 133, 113, 244, 238, 241, 218, 214, 83, 169, 112, 233, 154, 245, 14, 26,
167, 104, 50, 208, 241, 229, 70, 12, 3, 219, 15, 88, 34, 197, 185, 97, 205, 147, 95, 218, 159, 70, 129, 255, 145, 43, 49, 17, 197, 210, 68, 69, 210, 74, 59, 249, 41, 182, 11, 99, 106, 146, 250, 113, 183, 183, 193, 202, 81, 227, 242, 44, 1, 199, 153, 120, 48, 78, 65, 230, 173, 71, 15, 103, 89, 61, 109, 172, 7, 97, 101, 58, 126, 169, 97, 105, 80, 198, 188, 240, 219, 29, 14, 41, 139, 157, 117, 107, 98, 191, 222, 136, 247, 45, 93, 4, 154, 113, 108, 192, 154, 5, 76, 66, 134, 244, 227, 132, 238,
150, 201, 86, 237, 124, 152, 134, 199, 152, 117, 168, 43, 61, 129, 222, 245, 111, 109, 155, 142, 16, 101, 72, 191, 231, 213, 224, 26, 149, 87, 171, 79, 174, 23, 108, 245, 195, 70, 253, 36, 207, 226, 39, 13, 210, 175, 223, 178, 93, 16, 96, 209, 52, 247, 230, 58, 198, 1, 40, 75, 203, 45, 234, 156, 214, 244, 141, 89, 132, 229, 29,
156, 190, 108, 88, 10, 28, 105, 180, 182, 157, 23, 234, 17, 249, 18, 210, 62, 31, 236, 97, 190, 1, 236, 17, 102, 33, 84, 5, 131, 149, 198, 122, 86, 126, 90, 235, 175, 58, 176]
    assert 0 <= i and i < 256
    assert len(ary) == 256
    return ary[i]

def choice(ary, target, method, mask):
    global ss
    assert sorted(ary) == range(256)
    possible = []
    for idx, a in enumerate(ary):
        t = method(a, getSecretNumber(ss))
        assert t >= 0
        if (t & mask) == target:
            possible.append(idx)
    print(possible)
    assert len(possible) > 0
    return possible# [0]

def solve0():
    global ss
    ss = scramble(13)
    ary = [
            # {{{ fold
            100,
            190,
            88,
            240,
            97,
            216,
            47,
            243,
            39,
            18,
            173,
            144,
            157,
            114,
            116,
            250,
            152,
            150,
            196,
            175,
            28,
            179,
            23,
            213,
            73,
            66,
            20,
            228,
            67,
            200,
            156,
            7,
            221,
            210,
            50,
            233,
            110,
            32,
            71,
            194,
            117,
            220,
            43,
            113,
            148,
            247,
            217,
            185,
            41,
            177,
            239,
            12,
            232,
            101,
            82,
            178,
            128,
            191,
            42,
            172,
            136,
            81,
            115,
            251,
            69,
            89,
            139,
            48,
            129,
            63,
            154,
            125,
            242,
            95,
            132,
            143,
            102,
            29,
            199,
            10,
            146,
            79,
            225,
            149,
            236,
            245,
            56,
            105,
            27,
            235,
            162,
            201,
            193,
            208,
            104,
            96,
            209,
            155,
            34,
            68,
            202,
            169,
            49,
            13,
            134,
            45,
            226,
            255,
            14,
            52,
            33,
            62,
            44,
            186,
            6,
            121,
            21,
            244,
            131,
            64,
            111,
            123,
            248,
            124,
            36,
            9,
            58,
            112,
            222,
            130,
            254,
            120,
            75,
            224,
            76,
            145,
            80,
            231,
            198,
            219,
            182,
            24,
            126,
            40,
            246,
            192,
            78,
            166,
            140,
            158,
            223,
            57,
            207,
            90,
            161,
            54,
            38,
            252,
            72,
            203,
            70,
            85,
            171,
            107,
            98,
            4,
            51,
            188,
            238,
            15,
            147,
            237,
            65,
            214,
            99,
            183,
            22,
            5,
            92,
            141,
            184,
            30,
            108,
            60,
            135,
            118,
            127,
            205,
            133,
            159,
            19,
            197,
            74,
            17,
            59,
            138,
            195,
            119,
            8,
            25,
            206,
            55,
            106,
            91,
            160,
            122,
            218,
            37,
            181,
            211,
            212,
            234,
            241,
            46,
            77,
            170,
            11,
            109,
            16,
            249,
            168,
            230,
            215,
            174,
            204,
            164,
            2,
            253,
            94,
            31,
            189,
            35,
            153,
            180,
            103,
            142,
            1,
            137,
            187,
            84,
            165,
            26,
            87,
            93,
            83,
            86,
            0,
            151,
            3,
            167,
            53,
            176,
            227,
            163,
            229,
            61,
            # }}}
            ]
    return choice(ary, 172, m0, 255)

def solve1():
    global ss
    ss = scramble(ss)
    ary = [
            # {{{ fold
29,
131,
174,
82,
200,
183,
179,
143,
182,
216,
9,
79,
44,
203,
167,
6,
135,
62,
4,
58,
242,
84,
72,
175,
171,
126,
140,
188,
18,
250,
114,
205,
137,
142,
16,
163,
159,
24,
105,
154,
186,
209,
169,
116,
138,
206,
57,
219,
132,
234,
129,
127,
247,
28,
49,
178,
5,
37,
93,
148,
25,
238,
118,
50,
166,
102,
146,
231,
81,
86,
201,
33,
197,
181,
155,
133,
85,
224,
176,
208,
170,
99,
40,
38,
204,
194,
74,
222,
144,
145,
212,
161,
141,
7,
123,
92,
26,
185,
101,
119,
223,
164,
31,
172,
249,
43,
88,
8,
19,
61,
241,
76,
157,
47,
111,
130,
60,
120,
252,
90,
117,
207,
192,
189,
158,
23,
253,
199,
80,
106,
41,
160,
221,
233,
71,
0,
36,
32,
230,
246,
52,
248,
147,
150,
95,
87,
104,
34,
232,
229,
202,
63,
66,
39,
168,
108,
139,
22,
244,
75,
190,
98,
124,
237,
77,
193,
149,
11,
100,
240,
227,
42,
121,
162,
55,
215,
165,
48,
67,
211,
35,
56,
70,
54,
78,
14,
45,
187,
89,
184,
213,
255,
27,
96,
1,
69,
122,
125,
110,
217,
228,
91,
156,
113,
243,
65,
196,
64,
3,
128,
109,
12,
153,
173,
53,
94,
68,
97,
152,
151,
2,
73,
107,
236,
17,
46,
112,
177,
10,
103,
225,
254,
136,
245,
13,
218,
115,
239,
195,
214,
180,
134,
83,
30,
59,
20,
51,
235,
191,
226,
15,
21,
251,
210,
198,
220,
            # }}}
            ]
    return choice(ary, 6, m1, 255)

def solve2():
    global ss
    ss = scramble(ss)
    ary = [
            # {{{
255,
30,
98,
78,
198,
151,
15,
171,
92,
236,
93,
136,
206,
220,
56,
156,
54,
50,
82,
112,
123,
14,
77,
12,
184,
214,
208,
145,
66,
40,
52,
224,
213,
134,
227,
250,
22,
114,
79,
143,
10,
55,
174,
28,
85,
221,
154,
248,
84,
175,
168,
144,
11,
32,
64,
207,
147,
58,
176,
111,
108,
142,
216,
187,
110,
195,
5,
219,
72,
235,
49,
120,
232,
46,
155,
23,
27,
185,
233,
57,
170,
18,
71,
203,
88,
196,
140,
223,
109,
131,
103,
26,
251,
48,
180,
83,
106,
115,
130,
16,
133,
44,
164,
241,
182,
70,
204,
9,
218,
107,
179,
188,
6,
160,
190,
13,
209,
230,
119,
197,
226,
124,
121,
240,
80,
163,
97,
38,
149,
94,
202,
243,
193,
238,
167,
138,
148,
17,
3,
51,
127,
210,
62,
205,
239,
126,
169,
63,
95,
228,
199,
186,
81,
53,
152,
67,
125,
0,
153,
99,
150,
25,
217,
229,
102,
69,
246,
90,
117,
244,
60,
178,
73,
234,
2,
181,
75,
20,
24,
21,
8,
35,
141,
165,
201,
237,
96,
211,
129,
159,
19,
189,
135,
158,
33,
104,
91,
116,
177,
47,
247,
137,
122,
173,
59,
113,
29,
245,
242,
128,
39,
86,
192,
252,
37,
61,
89,
200,
157,
68,
225,
139,
1,
254,
36,
146,
162,
42,
45,
166,
172,
65,
231,
31,
105,
222,
43,
212,
118,
34,
215,
74,
87,
253,
194,
249,
100,
41,
76,
101,
4,
191,
132,
183,
7,
161,
            # }}}
            ]
    return choice(ary, 146, m2, 251)

def solve3():
    global ss
    ss = scramble(ss)
    ary = [
            # {{{
1,
223,
134,
163,
178,
59,
65,
116,
117,
17,
224,
122,
99,
85,
52,
63,
206,
131,
204,
32,
40,
177,
132,
133,
92,
101,
97,
230,
106,
144,
30,
73,
0,
153,
192,
107,
44,
123,
86,
233,
62,
164,
118,
80,
71,
179,
197,
184,
29,
108,
4,
58,
244,
235,
8,
209,
41,
28,
150,
199,
14,
94,
45,
203,
159,
51,
212,
222,
183,
157,
95,
66,
142,
34,
185,
61,
74,
26,
161,
39,
55,
248,
16,
180,
191,
247,
25,
129,
91,
54,
181,
88,
207,
193,
5,
216,
231,
121,
211,
174,
167,
255,
227,
176,
82,
137,
12,
38,
198,
109,
152,
250,
126,
169,
187,
33,
253,
87,
173,
221,
46,
182,
24,
84,
228,
239,
75,
19,
72,
112,
208,
251,
220,
254,
90,
218,
2,
64,
246,
50,
114,
156,
168,
160,
148,
68,
242,
130,
113,
171,
139,
76,
23,
49,
138,
6,
225,
241,
11,
213,
48,
196,
110,
146,
119,
202,
69,
237,
22,
93,
175,
154,
102,
120,
21,
57,
140,
9,
141,
162,
190,
60,
53,
205,
136,
158,
105,
145,
166,
115,
249,
77,
252,
70,
78,
226,
217,
37,
111,
127,
27,
243,
195,
128,
186,
83,
229,
96,
89,
81,
189,
219,
210,
15,
194,
147,
10,
245,
165,
98,
155,
240,
43,
214,
188,
232,
236,
201,
42,
125,
143,
100,
215,
103,
67,
36,
3,
47,
13,
124,
172,
20,
238,
7,
234,
135,
18,
151,
79,
149,
31,
56,
200,
104,
170,
 35,
            #}}}
            ]
    return choice(ary, 97, m3, 247)
def solve4():
    global ss
    ss = scramble(ss)
    ary = [
            # {{{
144,
158,
58,
155,
10,
130,
143,
78,
170,
39,
110,
250,
246,
7,
214,
235,
25,
202,
157,
89,
237,
131,
52,
233,
161,
245,
181,
184,
116,
26,
254,
159,
244,
101,
186,
248,
72,
70,
142,
205,
168,
134,
173,
3,
54,
222,
51,
104,
123,
34,
206,
2,
188,
73,
95,
11,
20,
38,
69,
113,
179,
183,
192,
30,
99,
215,
129,
6,
24,
133,
198,
98,
49,
92,
66,
106,
154,
118,
164,
145,
177,
121,
190,
84,
59,
172,
149,
75,
23,
151,
207,
19,
8,
15,
247,
37,
167,
255,
102,
226,
135,
100,
18,
176,
171,
4,
105,
111,
251,
9,
219,
88,
93,
213,
169,
16,
229,
57,
61,
35,
65,
238,
141,
216,
199,
182,
22,
230,
200,
42,
76,
225,
74,
166,
147,
242,
50,
103,
68,
193,
67,
28,
243,
162,
194,
45,
43,
17,
124,
31,
55,
21,
47,
197,
126,
122,
196,
136,
204,
79,
132,
32,
91,
140,
234,
236,
195,
125,
12,
109,
185,
0,
64,
137,
53,
241,
178,
138,
127,
112,
160,
71,
87,
48,
56,
120,
240,
175,
40,
150,
114,
119,
221,
146,
201,
228,
224,
44,
152,
227,
86,
156,
212,
62,
80,
96,
208,
63,
253,
108,
203,
165,
115,
128,
90,
210,
153,
1,
85,
41,
83,
13,
148,
232,
27,
97,
60,
107,
189,
218,
187,
211,
191,
163,
139,
239,
77,
209,
29,
223,
94,
117,
82,
81,
14,
217,
5,
33,
174,
180,
252,
231,
220,
36,
46,
249,
            #}}}
            ]
    return choice(ary, 130, m4, 202)

def solve6():
    global ss
    ss = scramble(ss)
    ary = [
            # {{{
6,
112,
67,
152,
88,
74,
161,
124,
42,
100,
247,
70,
226,
19,
215,
61,
141,
186,
190,
129,
24,
255,
173,
131,
23,
180,
25,
27,
33,
84,
237,
245,
30,
45,
8,
122,
126,
133,
234,
114,
185,
89,
97,
203,
125,
10,
90,
213,
71,
99,
172,
196,
224,
208,
251,
206,
209,
142,
91,
239,
174,
176,
94,
0,
4,
75,
167,
222,
205,
146,
156,
108,
240,
199,
76,
238,
18,
51,
63,
228,
113,
16,
158,
182,
183,
69,
110,
9,
65,
120,
249,
204,
81,
233,
34,
62,
220,
216,
166,
162,
57,
13,
78,
192,
159,
7,
191,
171,
17,
188,
211,
218,
168,
246,
135,
128,
56,
225,
140,
232,
231,
107,
14,
11,
58,
153,
136,
201,
60,
36,
132,
243,
111,
73,
163,
144,
164,
39,
236,
137,
77,
160,
47,
241,
87,
66,
200,
223,
170,
250,
37,
103,
92,
157,
96,
105,
217,
28,
139,
53,
93,
82,
179,
130,
195,
35,
2,
26,
59,
229,
101,
116,
147,
109,
40,
44,
214,
184,
235,
80,
154,
79,
21,
43,
119,
207,
193,
104,
102,
244,
22,
85,
68,
106,
202,
151,
254,
41,
145,
15,
98,
219,
49,
117,
143,
5,
48,
72,
86,
20,
198,
12,
253,
248,
1,
118,
242,
177,
29,
175,
148,
227,
121,
115,
50,
134,
123,
3,
83,
38,
194,
54,
230,
127,
210,
64,
189,
165,
149,
181,
252,
212,
32,
95,
187,
155,
150,
55,
178,
46,
221,
169,
31,
52,
138,
197,
            #}}}
            ]
    return choice(ary, 236, m6, 255)

def solve7():
    global ss
    ss = scramble(ss)
    ary = [
            # {{{
208,
168,
97,
242,
78,
60,
100,
128,
232,
152,
127,
115,
253,
36,
174,
209,
181,
159,
88,
165,
19,
212,
211,
111,
26,
12,
229,
43,
8,
136,
199,
240,
135,
178,
44,
48,
82,
125,
254,
195,
173,
207,
121,
233,
68,
84,
52,
215,
137,
158,
154,
69,
186,
133,
51,
180,
80,
126,
144,
226,
40,
2,
66,
38,
244,
171,
67,
118,
57,
247,
112,
18,
138,
231,
202,
73,
201,
179,
85,
119,
116,
141,
90,
161,
238,
162,
204,
224,
81,
103,
214,
203,
198,
184,
92,
147,
105,
221,
11,
134,
70,
95,
27,
166,
24,
71,
185,
46,
172,
237,
39,
123,
76,
91,
228,
108,
74,
206,
87,
197,
50,
35,
15,
25,
7,
164,
219,
130,
54,
188,
213,
120,
61,
250,
189,
217,
241,
230,
55,
246,
192,
96,
94,
89,
218,
245,
176,
98,
75,
102,
194,
47,
101,
58,
132,
182,
234,
190,
223,
45,
150,
107,
86,
64,
20,
49,
23,
210,
251,
21,
59,
72,
104,
53,
155,
113,
106,
131,
6,
14,
3,
255,
17,
225,
143,
28,
167,
93,
196,
16,
129,
65,
200,
41,
29,
235,
149,
30,
169,
79,
33,
32,
5,
160,
110,
175,
1,
140,
109,
170,
183,
42,
99,
63,
157,
117,
151,
56,
124,
236,
177,
216,
156,
227,
4,
248,
37,
0,
9,
220,
31,
243,
148,
77,
114,
145,
10,
13,
139,
249,
252,
22,
122,
193,
34,
83,
222,
191,
62,
239,
205,
187,
163,
146,
142,
153,
            #}}}
            ]
    return choice(ary, 142, m7, 255)

def solve8():
    global ss
    #  i19 = scramble(scramble + i17);
    i19 = scramble(ss + line[7])
    possible = []
    # {{{ ary
    ary = [
74, 42, 108, 90, 10, 82, 182, 2, 156, 188, 147, 187, 66, 137, 18, 140, 44, 115, 26, 64, 255, 229, 204, 50, 153, 53, 30, 101, 161, 145, 136, 155, 159, 78, 11, 142, 131, 226, 68, 233, 109, 62, 88, 99, 94, 19, 114, 100, 39, 138, 237, 144, 143, 98, 251, 246, 146, 33, 199, 91, 171, 195, 200, 192, 126, 248, 38, 35, 29, 205, 230, 71, 166, 176, 239, 197, 6, 217, 25, 209, 241, 152, 202, 93, 117, 13, 228, 86, 80, 207, 96, 21, 48, 196, 224, 102, 58, 149, 133, 89, 232, 157, 106, 125, 132, 7, 63, 60, 165, 254, 9, 116, 59, 208, 216, 111, 173, 105, 84, 201, 151, 253, 123, 220, 69, 225, 236, 24, 22, 242, 16, 194, 31, 110, 193, 36, 20, 61, 150, 167, 162, 184, 190, 127, 72, 234, 172, 141, 175, 54, 8, 174, 5, 206, 168, 45, 67, 43, 148, 250, 51, 87, 103, 81, 119, 73, 189, 163, 214, 178, 221, 227, 4, 23, 130, 240, 120, 55, 177, 85, 243, 247, 249, 180, 231, 52, 223, 218, 183, 34, 46, 128, 70, 77, 65, 32, 97, 203, 49, 95, 219, 56, 185, 215, 15, 124, 37, 238, 12, 210, 1, 244, 76, 57, 211, 129, 75, 28, 212, 3, 113, 121, 107, 169, 92, 170, 135, 154, 181, 41, 213, 222, 112, 164, 252, 0, 134, 27, 14, 40, 118, 245, 235, 191, 104, 17, 79, 186, 198, 179, 83, 158, 139, 47, 122, 160
]
    # }}}
    for idx, a in enumerate(ary):
        if (m8(a, getSecretNumber(i19)) & 255) == 103:
            possible.append(idx)
    #  print(possible)
    assert len(possible) > 0
    assert sorted(ary) == range(256)
    return possible

def final_check(f):
    # if (((((((((((long) getSecretNumber(i)) * ((long) getSecretNumber(i2))) * ((long) getSecretNumber(i3))) * ((long) getSecretNumber(i4))) * ((long) getSecretNumber(i5))) * ((long) getSecretNumber(i6))) * ((long) getSecretNumber(i7))) + ((long) i17)) + ((long) getSecretNumber(i9))) % 144 != 37) {
    def t(i):
        return getSecretNumber(f[i])

    return (t(0) * t(1) * t(2) * t(3) * t(4) * t(5) * t(6) + (f[7]) + t(8)) % 144 == 37
flag[0] = solve0()
flag[1] = solve1()
flag[2] = solve2()
flag[3] = solve3()
flag[4] = solve4()
flag[5] = []
for i in range(256):
    if (i&65) == 65:
        flag[5].append(i)
flag[6] = solve6()
flag[7] = solve7()


line = [0] * 9
def go(d):
    global line
    if d == 8:
        i19 = (((((line[0] + line[1]) + line[2]) + line[3]) + line[4]) + line[5]) + (line[6] * line[7])
        m9(i19)
        for a in solve8():
            line[8] = a
            if not final_check(line):
                continue
            print('!!')
            print(line)
        return
    for c in flag[d]:
        line[d] = c
        go(d + 1)
go(0)

# OOO{fab43416484944beba}
